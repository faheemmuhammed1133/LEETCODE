# Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

# Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

# Example 1:

# Input: x = 123
# Output: 321

# Example 2:

# Input: x = -123
# Output: -321

# Example 3:

# Input: x = 120
# Output: 21

{    Constraints:  -2^31 <= x <= 2^31 - 1  (2^31 ~> INT_MAX/10) }


class Solution {
public:
    int reverse(int x) {
        int k=0;
        while(x!=0){
            if(k> INT_MAX/10 || k< INT_MIN/10){
                return 0;
            }
            k=k*10+x%10;
            x/=10;
        }
        
        return k;
    }
};


